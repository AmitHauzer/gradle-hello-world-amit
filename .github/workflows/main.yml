name: Build, Tag, and Push Docker Image

env:
  PROJECT_NAME: gradle-hello-world-amit

on:
  push:
    branches:
      - master

jobs:
  docker-build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      # ! CHECK IF NEEDED
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Get version
        id: set-version
        run: |
          version=$(./gradlew getVersion --quiet | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)

          # Check if the version is empty
          if [ -z "$version" ]; then
            echo "Error: Version not found" >&2
            exit 1
          fi

          echo "Extracted version: $version"
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "VERSION=$version" >> "$GITHUB_ENV"

      - name: Build Docker image
        run: docker build --build-arg VERSION=${{ env.VERSION }} -t ${{ vars.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.VERSION }} .

      - name: Test container
        run: docker run ${{ vars.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.VERSION }}

      - name: Tag Docker image
        run: docker tag ${{ vars.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.VERSION }} ${{ vars.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.VERSION }}
          docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:latest

  docker-check:
    runs-on: ubuntu-latest
    needs: [docker-build]
    env:
      VERSION: ${{ needs.build.outputs.version }}
    steps:
      - name: Download Docker image
        run: |
          docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.VERSION }}

      - name: Run container!
        run: |
          docker run ${{ vars.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.VERSION }}

  commit-version:
    runs-on: ubuntu-latest
    needs: [docker-build, docker-check]
    
    steps:
      - name: Checkout repository for commit
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          persist-credentials: true
          fetch-depth: 1

      - name: Update patch version
        run: ./gradlew incrementPatchVersion

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit updated gradle.properties
        run: |
          # Add gradle.properties and check for changes
          git add gradle.properties
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Update gradle.properties version to ${{ env.VERSION }} [skip ci]"
            git push
          else
            echo "No changes in gradle.properties to commit."
          fi
